@misc{am,
	title = {Manifesto for Agile Software Development},
	url = {http://agilemanifesto.org/},
	howpublished = {http://agilemanifesto.org/}
},

@book{xp,
	address = {Reading  {MA}},
	title = {Extreme programming {eXplained} : embrace change},
	isbn = {9780201616415},
	publisher = {{Addison-Wesley}},
	author = {Kent Beck},
	year = {2000}
},

@book{scrum,
	address = {Upper Saddle River  {NJ}},
	title = {Agile software development with Scrum},
	isbn = {9780130676344},
	publisher = {Prentice Hall},
	author = {Ken Schwaber},
	year = {2002}
},

@book{xp_up,
	address = {New York},
	title = {Agile modeling : effective practices for {eXtreme} programming and the unified process},
	isbn = {9780471202820},
	publisher = {J. Wiley},
	author = {Scott Ambler},
	year = {2002}
},

@book{user_stories_applied,
	address = {Boston},
	title = {User stories applied : for agile software development},
	isbn = {9780321205681},
	publisher = {{Addison-Wesley}},
	author = {Mike Cohn},
	year = {2004}
},

@incollection{xp_expanded,
	series = {Lecture Notes in Computer Science},
	title = {{XP} Expanded: Distributed Extreme Programming},
	volume = {3556},
	url = {http://dx.doi.org/10.1007/11499053_21},
	booktitle = {Extreme Programming and Agile Processes in Software Engineering},
	publisher = {Springer Berlin / Heidelberg},
	author = {Hubert Baumeister and Michele Marchesi and Mike Holcombe and Keith Braithwaite and Tim Joyce},
	year = {2005},
	pages = {180--188}
},

@incollection{auto_tagging,
	series = {Lecture Notes in Business Information Processing},
	title = {Auto-tagging Emails with User Stories Using Project Context},
	volume = {48},
	isbn = {978-3-642-13054-0},
	url = {http://dx.doi.org/10.1007/978-3-642-13054-0_8},
	booktitle = {Agile Processes in Software Engineering and Extreme Programming},
	publisher = {Springer Berlin Heidelberg},
	author = {S. M. Sohan and Michael M. Richter and Frank Maurer},
	year = {2010},
	keywords = {Computer Science},
	pages = {103--116}
},

@inproceedings{communication_tools,
	address = {St. Louis, Missouri, {USA}},
	title = {Communication tools for distributed software development teams},
	isbn = {978-1-59593-641-7},
	url = {http://portal.acm.org/citation.cfm?id=1235007},
	doi = {10.1145/1235000.1235007},
	abstract = {This paper examines communication tools for software development and data management teams who are distributed geographically. Using a case study approach, we describe collaboration processes used by {RTI} International's {(RTI's)} application programming teams for three projects. Techniques range from simple conference calls and email through webcasts, collaboration websites and remote server control. These tools allow teams to work together to produce software and data products in spite of differences in locations, time zones and network access. The qualitative findings are relevant to increased globalization, outsourcing and telecommuting in the software development workforce.},
	booktitle = {Proceedings of the 2007 {ACM} {SIGMIS} {CPR} conference on Computer personnel research: The global information technology workforce},
	publisher = {{ACM}},
	author = {M. Rita Thissen and Jean M. Page and Madhavi C. Bharathi and Toyia L. Austin},
	year = {2007},
	keywords = {communication, distributed development, global workforce, virtual team},
	pages = {28--35}
},

@incollection{a_case_study_of,
	series = {Communications in Computer and Information Science},
	title = {A Case Study of Coordination in Distributed Agile Software Development},
	volume = {16},
	isbn = {978-3-540-85936-9},
	url = {http://dx.doi.org/10.1007/978-3-540-85936-9_17},
	booktitle = {Software Process Improvement},
	publisher = {Springer Berlin Heidelberg},
	author = {Rory V. {O’Connor} and Nathan Baddoo and Kari Smolander and Richard Messnarz and Steinar Hole and Nils Brede Moe},
	year = {2008},
	keywords = {Computer Science},
	pages = {189--200}
},

@inproceedings{communication_in_distributed,
	title = {Communication in Distributed Agile Development: A Case Study},
	isbn = {1089-6503},
	shorttitle = {Communication in Distributed Agile Development},
	url = {10.1109/EUROMICRO.2007.23},
	doi = {10.1109/EUROMICRO.2007.23},
	abstract = {Distributed software development is an increasingly important development approach for software companies as it brings tempting opportunities. Distributed development is already burdened with several problems and agile methods bring further challenges in the form of their reliance on verbal communication and volatile requirements. There is little empirical knowledge on distributed agile software development. We conducted two distributed agile software development case studies and compared our findings against existing recommendations about communication in distributed agile development. Our findings along with existing literature conclude that presented recommendations are worthwhile considering in distributed agile development, but with some caution. Our empirically based findings indicate that the role of a well-defined customer is the key recommendation. The lack of a well-defined customer able to meet responsibilities, as well as volatile requirements and inefficient communication, can cause severe problems even in small-scale distributed agile software development projects. Discussed recommendations are complemented with an additional recommendation.},
	booktitle = {Software Engineering and Advanced Applications, 2007. 33rd {EUROMICRO} Conference on},
	author = {M. Korkala and P. Abrahamsson},
	year = {2007},
	keywords = {distributed agile software development, software company, software engineering, verbal communication, volatile requirement},
	pages = {203--210}
},

@inproceedings{agile_methods,
	title = {Agile Methodologies for Distributed Collaborative Development of Enterprise Applications},
	url = {10.1109/CISIS.2008.105},
	doi = {10.1109/CISIS.2008.105},
	abstract = {Managing large distributed software projects for enterprise applications with traditional methodologies designed for collocated teams often leads to high planning and management overheads. The sequential and plan-driven traditional approaches often do not allow for an adequate reaction to changes in requirements. Today, Extreme Programming {(XP)} is the most popular agile development methodology. This paper analyzes how and to what extent {XP} can be transferred to distributed development projects for large enterprise applications. The focus is on {XP} in particular, since it is the most common agile methodology in practice and has the highest congruence to the original Agile Manifesto.},
	booktitle = {Complex, Intelligent and Software Intensive Systems, 2008. {CISIS} 2008. International Conference on},
	author = {T. Hildenbrand and M. Geisser and T. Kude and D. Bruch and T. Acker},
	year = {2008},
	keywords = {agile methodology, business data processing, distributed collaborative development, distributed processing, distributed software project, enterprise application, extreme programming, groupware, software engineering},
	pages = {540--545}
},

@inproceedings{on_coord,
	address = {Los Alamitos, {CA,} {USA}},
	title = {On Coordination Mechanisms in Global Software Development},
	volume = {0},
	isbn = {0-7695-2920-8},
	doi = {http://doi.ieeecomputersociety.org/10.1109/ICGSE.2007.33},
	abstract = {The ability of an organization to successfully carry out its tasks depends on the appropriate combination of organizational structure, processes, and communication and coordination mechanisms. In this paper, we present four case studies that exemplify coordination breakdown problems in global software development. Our analysis showed those problems took place even in the presence of a collection of processes, organizational mechanisms and communication tools established to increases the ability of the teams to perform their tasks. Finally, we discuss possible solutions to overcome the identified problems.},
	booktitle = {Global Software Engineering, International Conference on},
	publisher = {{IEEE} Computer Society},
	author = {Marcelo Cataldo and Matthew Bass and James D. Herbsleb and Len Bass},
	year = {2007},
	pages = {71--80},
	annote = {Complete {PDF} document was either not available or accessible. Please make sure you're logged in to the digital library to retrieve the complete {PDF} document.}
},

@article{essential_communication,
	title = {Essential communication practices for Extreme Programming in a global software development team},
	volume = {48},
	issn = {0950-5849},
	url = {http://www.sciencedirect.com/science/article/B6V0B-4JF8H93-2/2/625aa9c8d29f7c60b2a5a38425f9a41f},
	doi = {10.1016/j.infsof.2006.01.004},
	abstract = {We conducted an industrial case study of a distributed team in the {USA} and the Czech Republic that used Extreme Programming. Our goal was to understand how this globally-distributed team created a successful project in a new problem domain using a methodology that is dependent on informal, face-to-face communication. We collected quantitative and qualitative data and used grounded theory to identify four key factors for communication in globally-distributed {XP} teams working within a new problem domain. Our study suggests that, if these critical enabling factors are addressed, methodologies dependent on informal communication can be used on global software development projects.},
	number = {9},
	journal = {Information and Software Technology},
	author = {Lucas Layman and Laurie Williams and Daniela Damian and Hynek Bures},
	month = sep,
	year = {2006},
	keywords = {Case study, extreme programming, global software development},
	pages = {781--794}
},

@inproceedings{where_did_you,
	address = {Amsterdam, The Netherlands},
	title = {Where did you put it? Issues in the design and use of a group memory},
	isbn = {0-89791-575-5},
	shorttitle = {Where did you put it?},
	url = {http://portal.acm.org/citation.cfm?id=169063},
	doi = {10.1145/169059.169063},
	abstract = {Collaborating teams of knowledge workers need a common repository in which to share information gathered by individuals or developed by the team. This is difficult to achieve in practice, because individual information access strategies break down with group information—people can generally find things that are on their own messy desks and file systems, but not on other people's. The design challenge in a group memory is thus to enable low-effort information sharing without reducing individuals' finding effectiveness. This paper presents the lessons from our design and initial use of a hypertext-based group memory, {TeamInfo.} We expose the serious cognitive obstacles to a shared information structure, discuss the uses and benefits we have experienced, address the effects of technology limitations and highlight some unexpected social work impacts of our group memory.},
	booktitle = {Proceedings of the {INTERACT} '93 and {CHI} '93 conference on Human factors in computing systems},
	publisher = {{ACM}},
	author = {Lucy M. Berlin and Robin Jeffries and Vicki L. {O'Day} and Andreas Paepcke and Cathleen Wharton},
	year = {1993},
	keywords = {collaborative work, group conventions, group memory, information search and retrieval, information sharing},
	pages = {23--30}
},

@inproceedings{hipikat,
	address = {Portland, Oregon},
	title = {Hipikat: recommending pertinent software development artifacts},
	isbn = {{0-7695-1877-X}},
	shorttitle = {Hipikat},
	url = {http://portal.acm.org/citation.cfm?id=776866},
	abstract = {A newcomer to a software project must typically come up-to-speed on a large, varied amount of information about the project before becoming productive. Assimilating this information in the open-source context is difficult because a newcomer cannot rely on the mentoring approach that is commonly used in traditional software developments. To help a newcomer to an open-source project become productive faster, we propose Hipikat, a tool that forms an implicit group memory from the information stored in a project's archives, and that recommends artifacts from the archives that are relevant to a task that a newcomer is trying to perform. To investigate this approach, we have instantiated the Hipikat tool for the Eclipse open-source project. In this paper, we describe the Hipikat tool, we report on a qualitative study conducted with a Hipikat mock-up on a medium-sized in-house project, and we report on a case study in which Hipikat recommendations were evaluated for a task on Eclipse.},
	booktitle = {Proceedings of the 25th International Conference on Software Engineering},
	publisher = {{IEEE} Computer Society},
	author = {Davor Čubranić and Gail C. Murphy},
	year = {2003},
	pages = {408--418}
},

@article{hipikat_2,
	title = {Hipikat: A Project Memory for Software Development},
	volume = {31},
	issn = {0098-5589},
	shorttitle = {Hipikat},
	doi = {http://doi.ieeecomputersociety.org/10.1109/TSE.2005.71},
	abstract = {Sociological and technical difficulties, such as a lack of informal encounters, can make it difficult for new members of noncollocated software development teams to learn from their more experienced colleagues. To address this situation, we have developed a tool, named Hipikat, that provides developers with efficient and effective access to the group memory for a software development project that is implicitly formed by all of the artifacts produced during the development. This project memory is built automatically with little or no change to existing work practices. After describing the Hipikat tool, we present two studies investigating Hipikat's usefulness in software modification tasks. One study evaluated the usefulness of Hipikat's recommendations on a sample of 20 modification tasks performed on the Eclipse Java {IDE} during the development of release 2.1 of the Eclipse software. We describe the study, present quantitative measures of Hipikat's performance, and describe in detail three cases that illustrate a range of issues that we have identified in the results. In the other study, we evaluated whether software developers who are new to a project can benefit from the artifacts that Hipikat recommends from the project memory. We describe the study, present qualitative observations, and suggest implications of using project memory as a learning aid for project newcomers.},
	number = {6},
	journal = {{IEEE} Transactions on Software Engineering},
	author = {Davor Cubranic and Gail C. Murphy and Janice Singer and Kellogg S. Booth},
	year = {2005},
	keywords = {index terms- software development teams, project memory, recommender system, software artifacts, user studies.},
	pages = {446--465},
	annote = {Complete {PDF} document was either not available or accessible. Please make sure you're logged in to the digital library to retrieve the complete {PDF} document.}
},

@inproceedings{using_hybrid,
	address = {Montréal, Québec, Canada},
	title = {Using hybrid networks for the analysis of online software development communities},
	isbn = {1-59593-372-7},
	url = {http://portal.acm.org/citation.cfm?id=1124772.1124850},
	doi = {10.1145/1124772.1124850},
	abstract = {Social network-based systems usually suffer from two major limitations: they tend to rely on a single data source (e.g. email traffic), and the form of network patterns is often privileged over their content. To go beyond these limitations we describe a system we developed to visualize and navigate hybrid networks constructed from multiple data sources - with a direct link between formal representations and the raw content. We illustrate the benefits of our approach by analyzing patterns of collaboration in a large Open Source project, using hybrid networks to uncover important roles that would otherwise have been missed.},
	booktitle = {Proceedings of the {SIGCHI} conference on Human Factors in computing systems},
	publisher = {{ACM}},
	author = {Yevgeniy {"Eugene"} Medynskiy and Nicolas Ducheneaut and Ayman Farahat},
	year = {2006},
	keywords = {natural language processing, online communities, social networks, visualization},
	pages = {513--516}
},

@inproceedings{implementing_an_experience,
	title = {Implementing an experience factory: maintenance and evolution of the software and systems development process},
	shorttitle = {Implementing an experience factory},
	url = {10.1109/ICSM.1999.792598},
	doi = {10.1109/ICSM.1999.792598},
	abstract = {The ways in which software and systems are developed need to
evolve and be maintained to keep pace with technology changes. {ICL} has
developed an {“Engineering} Process Improvement Framework” to
deploy world class engineering practices. The framework is an
implementation of an experience factory. A repository to encourage
knowledge sharing is at its core, implemented on the company's Intranet.
The framework contains a toolkit to enable projects to create specific
engineering process descriptions, known as engineering definitions,
which are placed in the repository for knowledge sharing and as objects
for potential reuse by other projects. The approach defined by a project
is assessed and calibrated against an evolving definition of best
practices prior to implementation, leading to the identification of
risks and actions to be managed by the project. The effectiveness of the
framework is reviewed and measured against the business objectives and
project closure reports are published in the repository},
	booktitle = {Software Maintenance, 1999. {(ICSM} '99) Proceedings. {IEEE} International Conference on},
	author = {B. Chatters},
	year = {1999},
	keywords = {action identification, engineering process improvement framework, {ICL,} information resources, Intranet, knowledge sharing, risk identification, software development process evolution, software development process maintenance, software engineering, software maintenance, software process improvement, software reusability, systems development process evolution, systems development process maintenance, systems engineering},
	pages = {146--151}
},

@inproceedings{automating_requirements,
	title = {Automating requirements traceability: Beyond the record \& replay paradigm},
	isbn = {1527-1366},
	shorttitle = {Automating requirements traceability},
	url = {10.1109/ASE.2002.1115010},
	doi = {10.1109/ASE.2002.1115010},
	abstract = {Requirements traceability {(RT)} aims at defining relationships between stakeholder requirements and artifacts produced during the software development life-cycle. Although techniques for generating and validating {RT} are available, {RT} in practice often suffers from the enormous effort and complexity of creating and maintaining traces or from incomplete trace information that cannot assist engineers in real-world problems. In this paper we will present a tool-supported technique easing trace acquisition by generating trace information automatically. We will explain the approach using a video-on-demand system and show that the generated traces can be used in various engineering scenarios to solve {RT-related} problems.},
	booktitle = {Automated Software Engineering, 2002. Proceedings. {ASE} 2002. 17th {IEEE} International Conference on},
	author = {A. Egyed and P. Grunbacher},
	year = {2002},
	keywords = {artifacts, complexity, formal verification, real-world problems, requirements traceability automation, software development life-cycle, software metrics, stakeholder requirements, systems analysis, trace acquisition, video-on-demand system},
	pages = {163--171}
},

@misc{wikipedia,
	title = {Wikipedia},
	url = {http://www.wikipedia.org/},
	howpublished = {http://www.wikipedia.org/}
},

@article{wiki_based,
	title = {{Wiki-Based} Stakeholder Participation in Requirements Engineering},
	volume = {24},
	issn = {0740-7459},
	abstract = {Requirements elicitation and documentation are complex activities. The quality of their products can improve through stakeholders' participation, particularly in projects with high uncertainty. However, participative requirements engineering, especially in distributed environments, needs a platform that can support effective collaboration among often diverse stakeholders. Wikipedia has proved the flexibility of wikis for collaborating on content creation in general. In this article, the authors adapt this approach to support active stakeholder participation in {RE.} They include a document structure for wiki-based {RE} and discuss challenges and solutions based on their experience with several industry and academic projects. This article is part of a special issue on stakeholders in requirements engineering.},
	number = {2},
	journal = {{IEEE} Software},
	author = {Bj Decker and Eric Ras and J Rech and Pascal Jaubert and Marco Rieth},
	year = {2007},
	keywords = {requirements engineering, wikis},
	pages = {28--35},
	annote = {Complete {PDF} document was either not available or accessible. Please make sure you're logged in to the digital library to retrieve the complete {PDF} document.}
},

@article{self_organized,
	title = {{Self-Organized} Layered Hydrogenation in Black {Mg\_{2}NiH\_{x}} Switchable Mirrors},
	volume = {93},
	url = {http://link.aps.org/doi/10.1103/PhysRevLett.93.197404},
	doi = {10.1103/PhysRevLett.93.197404},
	abstract = {In addition to a mirrorlike {(Mg2Ni)} and a transparent {(Mg2NiH4)} state, thin films of {Mg2NiHx} exhibit a remarkable black state with low reflection over the entire visible spectrum, essentially zero transmission and a low electrical resistivity. Such a black state is not explicable for a homogeneous layer since a large absorption coefficient always yields substantial reflection. We show that it results from a self-organized and reversible double layering of metallic {Mg2NiH0.3} and semiconducting {Mg2NiH4.}},
	number = {19},
	journal = {Physical Review Letters},
	author = {W. Lohstroh and R. J. Westerwaal and B. Noheda and S. Enache and I. A. M. E. Giebels and B. Dam and R. Griessen},
	month = nov,
	year = {2004},
	pages = {197404}
},

@inproceedings{collaborative_knowledge,
	title = {Collaborative Knowledge Acquisition for Agile Project Management},
	volume = {2},
	url = {10.1109/EURCON.2005.1630138},
	doi = {10.1109/EURCON.2005.1630138},
	abstract = {Potential of agile management has been successfully proven in several different application domains, particularly in software development. In this paper, we propose process model for application of the agile methodologies to project management in general. In order to address the aspect of interaction, we discuss few collaborative computing mechanisms that may be adopted in intelligent information systems enabling knowledge acquisition for agile project management and further investigate qualitative benefits of the approach. The mechanisms are illustrated by means of our collaborative semantic Web portal prototype},
	booktitle = {Computer as a Tool, 2005. {EUROCON} {2005.The} International Conference on},
	author = {M. Tosic and V. Milicevic and M. Stankovic},
	year = {2005},
	keywords = {agile project management, collaborative computing, collaborative knowledge acquisition, collaborative semantic Web portal, groupware, information systems, intelligent information systems, Internet, knowledge acquisition, knowledge based systems, portals, project management, software engineering},
	pages = {1081--1084}
},

@incollection{ontowiki,
	series = {Lecture Notes in Computer Science},
	title = {{OntoWiki} – A Tool for Social, Semantic Collaboration},
	volume = {4273},
	url = {http://dx.doi.org/10.1007/11926078_53},
	booktitle = {The Semantic Web - {ISWC} 2006},
	publisher = {Springer Berlin / Heidelberg},
	author = {Isabel Cruz and Stefan Decker and Dean Allemang and Chris Preist and Daniel Schwabe and Peter Mika and Mike Uschold and Lora Aroyo and Sören Auer and Sebastian Dietzold and Thomas Riechert},
	year = {2006},
	pages = {736--749}
},

@inproceedings{a_case_study_of_wiki,
	address = {Banff, Alberta, Canada},
	title = {A case study of wiki-based experience repository at a medium-sized software company},
	isbn = {1-59593-163-5},
	url = {http://portal.acm.org/citation.cfm?id=1088622.1088660},
	doi = {10.1145/1088622.1088660},
	abstract = {The poster presents an exploratory case study on the use of a Wiki-based experience repository {(MASE)} that utilizes both informal and formal knowledge representations. The results provide evidences for the need of knowledge sharing tools to incorporate not only codification-oriented repository technologies but also those that facilitate communication and collaboration among people, and to support not only structured but also unstructured knowledge representation. It reveals that an informal knowledge authoring tool such as {MASE} is used for sharing content for problem understanding, instrumental, projective, social, expertise location, and content navigation purposes. We also observe self-organized maintenance of the repository content among the ordinary repository users as a result of the open-edit nature of the Wiki-based repository.},
	booktitle = {Proceedings of the 3rd international conference on Knowledge capture},
	publisher = {{ACM}},
	author = {Thomas Chau and Frank Maurer},
	year = {2005},
	keywords = {authoring tools, organizational learning},
	pages = {185--186}
},

@misc{Fitnesse,
	title = {{Fitnesse Acceptance Testing Tool}},
	url = {http://fitnesse.org/},
	howpublished = {http://fitnesse.org/}
},

@incollection{a_lightweight,
	series = {Lecture Notes in Computer Science},
	title = {A Lightweight Approach for Knowledge Sharing in Distributed Software Teams},
	volume = {5345},
	url = {http://dx.doi.org/10.1007/978-3-540-89447-6_4},
	booktitle = {Practical Aspects of Knowledge Management},
	publisher = {Springer Berlin / Heidelberg},
	author = {Takahira Yamaguchi and Walid Maalej and {Hans-Jörg} Happel},
	year = {2008},
	pages = {14--25}
},

@misc{mylyn,
	title = {Eclipse Mylyn Open Source Project},
	url = {http://www.eclipse.org/mylyn/},
	howpublished = {http://www.eclipse.org/mylyn/}
},

@inproceedings{supporting_program,
	address = {Toronto, Ontario, Canada},
	title = {Supporting program comprehension using semantic and structural information},
	isbn = {0-7695-1050-7},
	url = {http://portal.acm.org/citation.cfm?id=381473.381484},
	abstract = {The paper focuses on investigating the combined use of semantic and structural information of programs to support the comprehension tasks involved in the maintenance and reengineering of software systems. Here, semantic refers to the domain specific issues (both problem and development domains) of a software system. The other dimension, structural, refers to issues such as the actual syntactic structure of the program along with the control and data flow that it represents. An advanced information retrieval method, latent semantic indexing, is used to define a semantic similarity measure between software components. Components within a software system are then clustered together using this similarity measure. Simple structural information (i.e., file organization) of the software system is then used to assess the semantic cohesion of the clusters and files, with respect to each other. The measures are formally defined for general application. A set of experiments is presented which demonstrates how these measures can assist in the understanding of a nontrivial software system, namely a version of {NCSA} Mosaic.},
	booktitle = {Proceedings of the 23rd International Conference on Software Engineering},
	publisher = {{IEEE} Computer Society},
	author = {Jonathan I. Maletic and Andrian Marcus},
	year = {2001},
	pages = {103--112}
},

@inproceedings{FEAT,
	address = {Portland, Oregon},
	title = {{FEAT:} a tool for locating, describing, and analyzing concerns in source code},
	isbn = {{0-7695-1877-X}},
	shorttitle = {{FEAT}},
	url = {http://portal.acm.org/citation.cfm?id=776816.776969},
	abstract = {Note: {OCR} errors may be found in this Reference List extracted from the full text article. {ACM} has opted to expose the complete List rather than only correct and linked references.},
	booktitle = {Proceedings of the 25th International Conference on Software Engineering},
	publisher = {{IEEE} Computer Society},
	author = {Martin P. Robillard and Gail C. Murphy},
	year = {2003},
	pages = {822--823}
},

@misc{scrum_pad,
	title = {An Agile / Scrum Project Management Tool {\textbar} {ScrumPad}},
	url = {http://www.scrumpad.com/},
	howpublished = {http://www.scrumpad.com/}
},

@misc{version_one,
	title = {Agile Project Management Tool - {VersionOne}},
	url = {http://pm.versionone.com/Trial_AgileProjects.html?c-aws=p&gr-versionone&v-004&gclid=CIbC9bjhy6QCFQwDbAodgnTfEQ},
	howpublished = {{http://pm.versionone.com/Trial\_AgileProjects.html?c-aws=p\&gr-versionone\&v-004\&gclid=CIbC9bjhy6QCFQwDbAodgnTfEQ}}
},

@misc{mingle,
	title = {Agile Project Management Tool - Mingle - For Agile Software Development {\textbar} Agile {ALM} {\textbar} {ThoughtWorks} Studios},
	url = {http://www.thoughtworks-studios.com/mingle-agile-project-management},
	howpublished = {http://www.thoughtworks-studios.com/mingle-agile-project-management}
},

@misc{scrum_works,
	title = {{ScrumWorks} - {CollabNet,} Inc.},
	url = {http://danube.com/scrumworks/pro},
	howpublished = {http://danube.com/scrumworks/pro}
},

@misc{ibm_rtc,
	title = {{IBM} Software - Rational Team Concert},
	url = {http://www-01.ibm.com/software/awdtools/rtc/},
	howpublished = {http://www-01.ibm.com/software/awdtools/rtc/}
},

@misc{xplanner,
	title = {{XPlanner} Home},
	url = {http://www.xplanner.org/},
	howpublished = {http://www.xplanner.org/}
},

@misc{trac,
	title = {The Trac Project},
	url = {http://trac.edgewall.org/},
	howpublished = {http://trac.edgewall.org/}
},

@misc{jira,
	title = {Bug, Issue and Project Tracking for Software Development - {JIRA}},
	url = {http://www.atlassian.com/software/jira/},
	howpublished = {http://www.atlassian.com/software/jira/}
},

@misc{Bugzilla,
	title = {Bugzilla :: bugzilla.org},
	url = {http://www.bugzilla.org/},
	howpublished = {http://www.bugzilla.org/}
},

@misc{fog_bugz,
	title = {{FogBugz} - Bug \& Issue Tracking, Project Management, Help Desk Software},
	url = {http://www.fogcreek.com/fogbugz/},
	author = {Fog Creek Software and Happy Cog Studios - http://www. happycog.com},
	howpublished = {http://www.fogcreek.com/fogbugz/}
},

@misc{basecamp,
	title = {Project management software, online collaboration: Basecamp},
	url = {http://basecamphq.com/},
	howpublished = {http://basecamphq.com/}
},

@misc{team_box,
	title = {Teambox - Collaboration Software},
	url = {http://teambox.com/},
	howpublished = {http://teambox.com/}
},

@misc{share_point,
	title = {Business Collaboration Platform for the Enterprise and the Internet - {SharePoint} 2010},
	url = {http://sharepoint.microsoft.com/en-us/Pages/default.aspx},
	howpublished = {{http://sharepoint.microsoft.com/en-us/Pages/default.aspx}}
},

@misc{github,
	title = {Secure source code hosting and collaborative development - {GitHub}},
	url = {http://github.com/},
	howpublished = {http://github.com/}
},

@misc{codeplex,
	title = {{CodePlex} - Open Source Project Hosting},
	url = {http://www.codeplex.com/},
	howpublished = {http://www.codeplex.com/}
},

@misc{hudson,
	title = {Hudson {CI}},
	url = {http://hudson-ci.org/},
	howpublished = {http://hudson-ci.org/}
},

@misc{cruise_control,
	title = {{CruiseControl} Home},
	url = {http://cruisecontrol.sourceforge.net/},
	howpublished = {http://cruisecontrol.sourceforge.net/}
},

@misc{skype,
	title = {Skype},
	url = {http://www.skype.com/intl/en-us/home},
	howpublished = {http://www.skype.com/intl/en-us/home}
},

@article{modified_agile,
	title = {Modified agile practices for outsourced software projects},
	volume = {52},
	url = {http://portal.acm.org/ft_gateway.cfm?id=1562200&type=html&coll=GUIDE&dl=GUIDE&CFID=105344370&CFTOKEN=10438663},
	doi = {10.1145/1562164.1562200},
	abstract = {Frustration with the bureaucratic nature of the disciplined approach has led to the call for agile development. The new approach is defined by the Agile Manifesto (http://agilemanifesto.org/), which values individuals and interactions over processes and tools, working software over comprehensive documentation, customer collaboration over contract negotiation, and agility in responding to change over following a prescribed plan. Agile development does not focus on process improvement; instead it focuses on customer satisfaction and employee empowerment. This is evident from reading the stated values and principles of the Agile Manifesto, which include fairly extreme positions such as "welcome changing requirements, even late in development" and "the best architectures, requirements, and designs emerge from self-organizing teams."},
	number = {9},
	journal = {Commun. {ACM}},
	author = {Dinesh Batra},
	year = {2009},
	pages = {143--148}
},

@inproceedings{practical_considerations,
	address = {Los Alamitos, {CA,} {USA}},
	title = {Practical Considerations for Distributed Agile Projects},
	volume = {0},
	isbn = {978-0-7695-3321-6},
	doi = {http://doi.ieeecomputersociety.org/10.1109/Agile.2008.57},
	abstract = {As a member of project teams both onshore and offshore, I have learned many lessons about the challenges specific to distributed agile projects. If I could relive my last four years as a project manager at {ThoughtWorks,} there would be so many simple, small things that I would do differently. This report discusses those lessons as items that must be considered as part of the planning and execution of such projects.},
	booktitle = {{AGILE} Conference},
	publisher = {{IEEE} Computer Society},
	author = {Jane M. Robarts},
	year = {2008},
	keywords = {distributed, offshore, project planning},
	pages = {327--332},
	annote = {Complete {PDF} document was either not available or accessible. Please make sure you're logged in to the digital library to retrieve the complete {PDF} document.}
},

@inproceedings{fully_distributed,
	title = {Fully Distributed Scrum: The Secret Sauce for Hyperproductive Offshored Development Teams},
	shorttitle = {Fully Distributed Scrum},
	url = {10.1109/Agile.2008.92},
	doi = {10.1109/Agile.2008.92},
	abstract = {Scrum was designed to achieve a hyperproductive state where productivity increases 5-10 times over industry averages and many collocated teams have achieved this effect. The question for this paper is whether distributed, offshore teams can consistently achieve the hyperproductive state. In particular, can a team establish a localized velocity and then maintain or increase that velocity when distributing teams across continents. Since 2006, Xebia started projects with half Dutch and half Indian team members. After establishing localized hyperproductivity, they move the Indian members of the team to India and show increasing velocity with fully distributed teams. After running {XP} engineering practices inside many distributed Scrum projects, Xebia has systematically productized a model very similar to the {SirsiDynix} model {(J.} Sutherland, 2006) for high performance, distributed, offshore teams with outstanding quality.},
	booktitle = {Agile, 2008. {AGILE} '08. Conference},
	author = {J. Sutherland and G. Schoonheim and E. Rustenburg and M. Rijk},
	year = {2008},
	keywords = {distributed Scrum projects, hyperproductive offshored development teams, project management, {SirsiDynix} model, software development management, Xebia, {XP} engineering practices},
	pages = {339--344}
},

@inproceedings{yahoo,
	address = {Los Alamitos, {CA,} {USA}},
	title = {Yahoo! Distributed Agile: Notes from the World Over},
	volume = {0},
	isbn = {978-0-7695-3321-6},
	shorttitle = {Yahoo! Distributed Agile},
	doi = {http://doi.ieeecomputersociety.org/10.1109/Agile.2008.21},
	abstract = {In an ideal world, everyone on an Agile team is in the same physical location, fostering cooperation and collaboration all throughout the team’s {growth.??Unfortunately} the real world doesn’t always work that way. The current trend to cut costs and increase revenue by off-shoring and establishing multiple company campuses around the world for continuous development is inherently {anti-Agile.??Does} this mean that we cannot do Agile with distributed {teams?As} Scrum coaches at Yahoo!, we experience challenges with distributed Agile teams on a day-to-day {basis.??Some} teams have failed miserably, while others have succeeded well – surprising us with their novel solutions in order to make Agile work. Our objective is to highlight successful patterns that we have noticed that significantly helped in making these distributed teams thrive.},
	booktitle = {{AGILE} Conference},
	publisher = {{IEEE} Computer Society},
	author = {Brian Scott Drummond and John Francis {"JF"} Unson},
	year = {2008},
	keywords = {agile values, distributed agile, experience report},
	pages = {315--321},
	annote = {Complete {PDF} document was either not available or accessible. Please make sure you're logged in to the digital library to retrieve the complete {PDF} document.}
},

@incollection{collaboration_in,
	series = {Lecture Notes in Computer Science},
	title = {Collaboration in Distributed Software Development},
	volume = {5413},
	url = {http://dx.doi.org/10.1007/978-3-540-95888-8_7},
	booktitle = {Software Engineering},
	publisher = {Springer Berlin / Heidelberg},
	author = {Andrea De Lucia and Filomena Ferrucci and Filippo Lanubile},
	year = {2009},
	pages = {174--193}
}
@book{ron_jeffries,
	address = {Boston},
	title = {Extreme programming installed},
	isbn = {9780201708424},
	publisher = {{Addison-Wesley}},
	author = {Ron Jeffries},
	year = {2001}
}

@book{rachel_davies,
	address = {Raleigh  {N.C.}},
	title = {Agile coaching},
	isbn = {9781934356432},
	publisher = {Pragmatic Bookshelf},
	author = {Rachel Davies},
	year = {2009}
}

@book{bill_wake,
	address = {Boston},
	title = {Extreme programming explored},
	isbn = {9780201733976},
	publisher = {Addison Wesley},
	author = {William Wake},
	year = {2002}
}


@misc{team_server,
	title = {Team Foundation Server 2010},
	url = {http://msdn.microsoft.com/en-us/vstudio/ff637362.aspx},
	howpublished = {http://msdn.microsoft.com/en-us/vstudio/ff637362.aspx}
}


@article{a_vector_space,
	title = {A vector space model for automatic indexing},
	volume = {18},
	url = {http://portal.acm.org/citation.cfm?id=361220&coll=portal&dl=ACM&ret=1},
	doi = {10.1145/361219.361220},
	abstract = {In a document retrieval, or other pattern matching environment where stored entities (documents) are compared with each other or with incoming patterns (search requests), it appears that the best indexing (property) space is one where each entity lies as far away from the others as possible; in these circumstances the value of an indexing system may be expressible as a function of the density of the object space; in particular, retrieval performance may correlate inversely with space density. An approach based on space density computations is used to choose an optimum indexing vocabulary for a collection of documents. Typical evaluation results are shown, demonstating the usefulness of the model.},
	number = {11},
	journal = {Commun. {ACM}},
	author = {G. Salton and A. Wong and C. S. Yang},
	year = {1975},
	keywords = {automatic indexing, automatic information retrieval, content analysis, document space},
	pages = {613--620}
}


@misc{twitter_lucene,
	title = {The Twitter Engineering Blog: Twitter's New Search Architecture},
	url = {http://engineering.twitter.com/2010/10/twitters-new-search-architecture.html},
	howpublished = {http://engineering.twitter.com/2010/10/twitters-new-search-architecture.html}
}


@misc{ruby,
	title = {Ruby Programming Language},
	url = {http://www.ruby-lang.org/en/},
	howpublished = {http://www.ruby-lang.org/en/}
}


@misc{active_record,
	title = {Active Record -- Object-relation mapping put on rails},
	url = {http://ar.rubyonrails.org/},
	howpublished = {http://ar.rubyonrails.org/}
},

@misc{ruby_on_rails,
	title = {Ruby on Rails},
	url = {http://rubyonrails.org/},
	howpublished = {http://rubyonrails.org/}
}


@misc{lucene,
	title = {Apache Lucene - Overview},
	url = {http://lucene.apache.org/java/docs/index.html},
	howpublished = {http://lucene.apache.org/java/docs/index.html}
},

@misc{solr,
	title = {Apache Solr},
	url = {http://lucene.apache.org/solr/},
	howpublished = {http://lucene.apache.org/solr/}
}

@misc{sql_server,
	title = {Microsoft SQL Server},
	url = {http://www.microsoft.com/sqlserver},
	howpublished = {http://www.microsoft.com/sqlserver}
}


@misc{cron,
	title = {crontab.org - {CRONTAB}},
	url = {http://crontab.org/},
	howpublished = {http://crontab.org/}
}


@misc{scheduled_tasks,
	title = {Windows Scheduled Tasks},
	url = {http://support.microsoft.com/kb/308569},
	howpublished = {http://support.microsoft.com/kb/308569}
}


@misc{skype4py,
	title = {{Skype4Py}},
	url = {http://skype4py.sourceforge.net/doc/html/},
	howpublished = {http://skype4py.sourceforge.net/doc/html/}
}


@inproceedings{how_did_we,
	address = {Los Alamitos, {CA,} {USA}},
	title = {How Did We Adapt Agile Processes to Our Distributed Development?},
	volume = {0},
	isbn = {978-0-7695-3321-6},
	doi = {http://doi.ieeecomputersociety.org/10.1109/Agile.2008.7},
	abstract = {Today, many software projects are being developed by collaborating programmers working across multiple {locations.??Whatever} the reason may be, outsourcing, organizational structure, or external collaboration, these projects often suffer from the physical separation of developing across the city, across the country, or around the world. Such distances intensify challenges such as peer communications, shared understanding between teams, and systems {integration.??This} paper describes how three organizations adapted agile processes to overcome barriers such as multiple time zones, mixed cultures, mismatched schedules, and limited travel budget to frequently deliver successful software releases.},
	booktitle = {{AGILE} Conference},
	publisher = {{IEEE} Computer Society},
	author = {Cynick Young and Hiroki Terashima},
	year = {2008},
	keywords = {agile processes, collaboration, distributed development, physical separation},
	pages = {304--309},
	annote = {Complete {PDF} document was either not available or accessible. Please make sure you're logged in to the digital library to retrieve the complete {PDF} document.}
}


@book{reinforcement_learning,
	address = {Cambridge  Mass.},
	title = {Reinforcement learning : an introduction},
	isbn = {9780262193986},
	publisher = {{MIT} Press},
	author = {Richard Sutton},
	year = {1998}
}                 

@book{local_global,
	title = {Knowledge Containers},
	publisher = {Morgan Kaufmann Publishers},
	author = {Richter, M. M.},
	year = {2003}
}                 


@inproceedings{issue_tracking,
	address = {Savannah, Georgia, {USA}},
	title = {Communication, collaboration, and bugs: the social nature of issue tracking in small, collocated teams},
	isbn = {978-1-60558-795-0},
	shorttitle = {Communication, collaboration, and bugs},
	url = {http://portal.acm.org/citation.cfm?id=1718972&dl=ACM},
	doi = {10.1145/1718918.1718972},
	abstract = {Issue tracking systems help organizations manage issue reporting, assignment, tracking, resolution, and archiving. Traditionally, it is the Software Engineering community that researches issue tracking systems, where software defects are reported and tracked as 'bug reports' within an archival database. Yet, as issue tracking is fundamentally a social process, it is important to understand the design and use of issue tracking systems from that perspective. Consequently, we conducted a qualitative study of issue tracking systems as used by small, collocated software development teams. We found that an issue tracker is not just a database for tracking bugs, features, and inquiries, but also a focal point for communication and coordination for many stakeholders within and beyond the software team. Customers, project managers, quality assurance personnel, and programmers all contribute to the shared knowledge and persistent communication that exists within the issue tracking system. These results were all the more striking because in spite of teams being collocated--which afforded frequent, face-to-face communication--the issue tracker was still used as a fundamental communication channel. We articulate various real-world practices surrounding issue trackers and offer design considerations for future systems.},
	booktitle = {Proceedings of the 2010 {ACM} conference on Computer supported cooperative work},
	publisher = {{ACM}},
	author = {Dane Bertram and Amy Voida and Saul Greenberg and Robert Walker},
	year = {2010},
	keywords = {issue tracking, shared knowledge, software engineering},
	pages = {291--300}
}


@article{chi_square,
	title = {The Use of Maximum Likelihood Estimates in χ2 Tests for Goodness of Fit},
	volume = {25},
	issn = {00034851},
	url = {http://www.jstor.org/stable/2236840},
	abstract = {The usual test that a sample comes from a distribution of given form is performed by counting the number of observations falling into specified cells and applying the χ2 test to these frequencies. In estimating the parameters for this test, one may use the maximum likelihood (or equivalent) estimate based (1) on the cell frequencies, or (2) on the original observations. This paper shows that in (2), unlike the well known result for (1), the test statistic does not have a limiting χ2-distribution, but that it is stochastically larger than would be expected under the χ2 theory. The limiting distribution is obtained and some examples are computed. These indicate that the error is not serious in the case of fitting a Poisson distribution, but may be so for the fitting of a normal.},
	number = {3},
	journal = {The Annals of Mathematical Statistics},
	author = {Herman Chernoff and E. L. Lehmann},
	month = sep,
	year = {1954},
	note = {{ArticleType:} research-article / Full publication date: Sep., 1954 / Copyright © 1954 Institute of Mathematical Statistics},
	pages = {579--586}
}

@book{grounded_theory,
	address = {Thousand Oaks  {CA}},
	edition = {2nd ed.},
	title = {Basics of qualitative research : techniques and procedures for developing grounded theory},
	isbn = {9780803959408},
	publisher = {Sage Publications},
	author = {Anselm Strauss},
	year = {1998}
}